#!/usr/bin/env perl
# @(#)$Id: munchies_create 1206 2011-06-19 22:13:44Z pjf $

use strict;
use warnings;

use English qw(-no_match_vars);
use File::Spec::Functions;
use FindBin qw( $Bin );

BEGIN {
   my $path = catfile( $Bin, q(munchies_localenv) );

   do $path or die $EVAL_ERROR || "Path $path not done\n";
}

use version; our $VERSION = qv( sprintf '0.5.%d', q$Rev: 1206 $ =~ /\d+/gmx );

use Catalyst::ScriptRunner;

Catalyst::ScriptRunner->run( 'App::Munchies', 'Create' );

1;

__END__

=pod

=head1 NAME

munchies_create - Create a new Catalyst Component

=head1 SYNOPSIS

 munchies_create [options] model|view|controller name [helper] [options]

 Options:
   --force        don't create a .new file where a file to be created exists
   --mechanize    use Test::WWW::Mechanize::Catalyst for tests if available
   --help         display this help and exits

 Examples:
   munchies_create controller My::Controller
   munchies_create -mechanize controller My::Controller
   munchies_create view My::View
   munchies_create view HTML TT
   munchies_create model My::Model
   munchies_create model SomeDB DBIC::Schema MyApp::Schema create=dynamic \
      dbi:SQLite:/tmp/my.db
   munchies_create model AnotherDB DBIC::Schema MyApp::Schema create=static \
      [Loader opts like db_schema, naming] dbi:Pg:dbname=foo root 4321
      [connect_info opts like quote_char, name_sep]

 See also:
   perldoc Catalyst::Manual
   perldoc Catalyst::Manual::Intro
   perldoc Catalyst::Helper::Model::DBIC::Schema
   perldoc Catalyst::Model::DBIC::Schema
   perldoc Catalyst::View::TT

=head1 DESCRIPTION

Create a new Catalyst Component.

Existing component files are not overwritten.  If any of the component files
to be created already exist the file will be written with a '.new' suffix.
This behavior can be suppressed with the C<-force> option.

=head1 AUTHORS

Catalyst Contributors, see Catalyst.pm

=head1 COPYRIGHT

This library is free software. You can redistribute it and/or modify
it under the same terms as Perl itself.

=cut

# Local Variables:
# mode: perl
# tab-width: 3
# End:
